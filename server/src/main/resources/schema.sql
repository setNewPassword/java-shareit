CREATE TABLE IF NOT EXISTS users
(
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    name  VARCHAR(255)                                        NOT NULL,
    email VARCHAR(512)                                        NOT NULL,
    CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS requests
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    description  VARCHAR(512)                                        NOT NULL,
    requester_id BIGINT                                              NOT NULL,
    created      TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW(),
    CONSTRAINT FK_REQUESTS_USERS FOREIGN KEY (requester_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS items
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    name        VARCHAR(255),
    description VARCHAR(1024),
    available   BOOLEAN DEFAULT TRUE,
    owner_id    BIGINT                                              NOT NULL,
    request_id  BIGINT,
    CONSTRAINT FK_ITEMS_OWNER_ID FOREIGN KEY (owner_id) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT FK_ITEMS_REQUESTS FOREIGN KEY (request_id) REFERENCES requests (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS bookings
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    booker_id  BIGINT                                              NOT NULL,
    item_id    BIGINT                                              NOT NULL,
    status     VARCHAR(64),
    start_date TIMESTAMP,
    end_date   TIMESTAMP,
    CONSTRAINT FK_BOOKINGS_ITEMS FOREIGN KEY (item_id) REFERENCES items (id) ON DELETE CASCADE,
    CONSTRAINT FK_BOOKINGS_USERS FOREIGN KEY (booker_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS comments
(
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    text      VARCHAR(512)                                        NOT NULL,
    item_id   BIGINT,
    author_id BIGINT,
    created   TIMESTAMP,
    CONSTRAINT FK_COMMENTS_ITEM_ID FOREIGN KEY (item_id) REFERENCES items (id),
    CONSTRAINT FK_COMMENTS_AUTHOR_ID FOREIGN KEY (author_id) REFERENCES users (id)
);